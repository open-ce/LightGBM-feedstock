# Builds the CPU and CUDA variants of liblightgbm and lightgbm package
{% set version = "4.2.0" %}
{% set build_ext_version = version %}
{% set proc_build_number = "1" %}

package:
  name: lightgbm-ext
  version: {{ version }}

source:
  git_url: https://github.com/microsoft/LightGBM
  git_tag: v{{ version }}
  patches:
    # 02xx - GPU only patch specific to open-ce (maybe)
 #   - 0201-Build-fix-for-cuda.patch                         #[build_type == 'cuda']
 #   - 0202-Fix-for-cuda-compute-capabilities-setting.patch  #[build_type == 'cuda']
    - 0001-Cuda-12.2-support.patch                           # [cudatoolkit == "12.2"]

build:
  number: 4
  run_exports:
    - {{ pin_subpackage("liblightgbm", max_pin="x.x.x") }}

outputs:
  - name: lightgbm-proc
    build:
      number: {{ proc_build_number }}
      string: {{ build_type }}
    test:
      commands:
         - exit 0
    about:
      home: https://github.com/microsoft/LightGBM
      license: MIT License
      license_family: MIT
      license_file: LICENSE
      summary: Light Gradient Boosting Machine that uses tree based learning algorithms

  - name: liblightgbm
    script: install-liblightgbm.sh
    build:
      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_type }}_{{ mpi_type }} #[build_type == 'cpu']
      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_type }}{{ cudatoolkit | replace(".*", "") }}_{{ mpi_type }} #[build_type == 'cuda']
{% if build_type == 'cuda' %}
      script_env:
        - CUDA_HOME
{% endif %}
      track_features:
        {{ "- lightgbm-cuda" if build_type == 'cuda' else "" }} 

    requirements:
      build:
        # Use the system compilers when wanting to build with the system mpi.
        - {{ compiler('c') }}                 #[mpi_type != 'system' and ppc_arch != "p10"]
        - {{ compiler('cxx') }}               #[mpi_type != 'system' and ppc_arch != "p10"]
        - cmake >=3.16
        - make
        - libuv
        - git >={{ git }}
      host:
{% if build_type == 'cuda' %}
        - cudatoolkit {{ cudatoolkit }}
        - openmpi {{ openmpi }} *cuda*   #[mpi_type == 'openmpi']
{% else %}
        - openmpi {{ openmpi }}          #[mpi_type == 'openmpi']
{% endif %}
      run:
        - cudatoolkit {{ cudatoolkit }}        #[build_type == 'cuda']
      run_constrained:
        - lightgbm-proc * {{ build_type }}

    about:
      home: https://github.com/microsoft/LightGBM
      license: MIT License
      license_family: MIT
      license_file: LICENSE
      summary: Light Gradient Boosting Machine that uses tree based learning algorithms
      description: |
        A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT, GBM or MART)
        framework based on decision tree algorithms, used for ranking, classification and
        many other machine learning tasks.

    test:
      commands:
        # headers
        - test -f $PREFIX/include/LightGBM/tree_learner.h
        - test -f $PREFIX/include/LightGBM/objective_function.h

        # shared
        - test -f $PREFIX/lib/lib_lightgbm.so


  - name: lightgbm
    script: install-py-lightgbm.sh        #[not x86_64]
    script: install-py-lightgbm-x86.sh    #[x86_64]
    build:
      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_type }}_{{ mpi_type }} #[build_type == 'cpu']
      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_type }}{{ cudatoolkit | replace(".*", "") }}_{{ mpi_type }} #[build_type == 'cuda']
{% if build_type == 'cuda' %}
      script_env:
        - CUDA_HOME
{% endif %}
      track_features:
        {{ "- lightgbm-cuda" if build_type == 'cuda' else "" }}

    requirements:
      build:
        # Use the system compilers when wanting to build with the system mpi.
        - {{ compiler('c') }}                 #[mpi_type != 'system' and ppc_arch != "p10"]
        - {{ compiler('cxx') }}               #[mpi_type != 'system' and ppc_arch != "p10"]
        - cmake >=3.16
        - make
      host:
        - {{ pin_subpackage('liblightgbm', exact=True) }}
        - python {{ python }}
        - setuptools {{ setuptools }}
{% if build_type == 'cuda' %}
        - openmpi {{ openmpi }} *cuda*   #[mpi_type == 'openmpi']
        - cudatoolkit {{ cudatoolkit }}
{% else %}
        - openmpi {{ openmpi }}          #[mpi_type == 'openmpi']
{% endif %}
      run:
        - {{ pin_subpackage('liblightgbm', exact=True) }}
        - python {{ python }}
        - numpy {{ numpy }}
        - scipy {{ scipy }}
        - scikit-learn {{ scikit_learn }}
        - joblib {{ joblib }}
{% if build_type == 'cuda' %}
        - openmpi {{ openmpi }} *cuda*   #[mpi_type == 'openmpi']
        - cudatoolkit {{ cudatoolkit }}
{% else %}
        - openmpi {{ openmpi }}          #[mpi_type == 'openmpi']
{% endif %}
      run_constrained:
        - lightgbm-proc * {{ build_type }}

    about:
      home: https://github.com/microsoft/LightGBM
      license: MIT License
      license_family: MIT
      license_file: LICENSE
      summary: Light Gradient Boosting Machine that uses tree based learning algorithms
      description: |
        A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT, GBM or MART)
        framework based on decision tree algorithms, used for ranking, classification and
        many other machine learning tasks.

    test:
      imports:
        - lightgbm

about:
  home: https://github.com/microsoft/LightGBM
  license: MIT License
  license_family: MIT
  license_file: LICENSE
  summary: Light Gradient Boosting Machine that uses tree based learning algorithms
  description: |
    A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT, GBM or MART)
    framework based on decision tree algorithms, used for ranking, classification and
    many other machine learning tasks.
  doc_url: https://github.com/microsoft/LightGBM/tree/v{{ version }}/docs
  dev_url: https://github.com/microsoft/LightGBM/tree/v{{ version }}

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
